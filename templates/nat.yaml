AWSTemplateFormatVersion: 2010-09-09

Parameters:

  AvailabilityZone:
    Type: AWS::EC2::AvailabilityZone::Name
  ImageId:
    Type: AWS::EC2::Image::Id
  InstanceType:
    Type: String
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName

Resources:

  NATSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: NATSG
      GroupDescription: sg for nat in public subnet
      Tags:
      - Key: Name
        Value: sg-nat
      VpcId: !ImportValue base-network-infra-MainVpc
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: !ImportValue "base-network-infra-PrivateSubnetCidrBlock"
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: !ImportValue "base-network-infra-PrivateSubnetCidrBlock"
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0

  NATInstance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Ref: AvailabilityZone
      ImageId:
        Ref: ImageId
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: KeyName
      NetworkInterfaces:
      - AssociatePublicIpAddress: true
        DeleteOnTermination: true
        Description: nat public ip network interface
        DeviceIndex: 0
        GroupSet:
          - Ref: NATSecurityGroup
        SubnetId: !ImportValue base-network-infra-PublicSubnet
      SourceDestCheck: false
      Tags:
      - Key: Name
        Value: nat
      Tenancy: default